(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["SubtaskBody"],{

/***/ "./src/component/Table/Subtask/SubtaskBody.tsx":
/*!*****************************************************!*\
  !*** ./src/component/Table/Subtask/SubtaskBody.tsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_loadable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-loadable */ \"./node_modules/react-loadable/lib/index.js\");\n/* harmony import */ var react_loadable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_loadable__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material-ui/core */ \"./node_modules/@material-ui/core/esm/index.js\");\n/* harmony import */ var immutability_helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! immutability-helper */ \"./node_modules/immutability-helper/index.js\");\n/* harmony import */ var immutability_helper__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(immutability_helper__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material-ui/core/styles */ \"./node_modules/@material-ui/core/esm/styles/index.js\");\n/* harmony import */ var _AppContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../AppContext */ \"./src/AppContext.tsx\");\n/* harmony import */ var _SubtaskRow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SubtaskRow */ \"./src/component/Table/Subtask/SubtaskRow.tsx\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ConfirmDialog = react_loadable__WEBPACK_IMPORTED_MODULE_1___default()({\r\n    loader: () => Promise.all(/*! import() | ConfirmDialog */[__webpack_require__.e(\"vendors~ConfirmDialog~GeneralDialog~Header~ProjectTableBody~TaskTable\"), __webpack_require__.e(\"ConfirmDialog\")]).then(__webpack_require__.bind(null, /*! ../../Dialog/ConfirmDialog */ \"./src/component/Dialog/ConfirmDialog.tsx\")),\r\n    loading: () => null\r\n});\r\nconst useStyles = Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__[\"makeStyles\"])(theme => ({\r\n    createTextField: { display: \"flex\" },\r\n    textField: { marginRight: 8, flexGrow: 1 }\r\n}));\r\nconst CreateSubtaskRow = props => {\r\n    const classes = useStyles();\r\n    const { subtaskName, setSubtaskName, _onEnter, handleCreateSubtask } = props;\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableRow\"], null,\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], { colSpan: 2 }),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], { colSpan: 1 },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { className: classes.createTextField },\r\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TextField\"], { className: classes.textField, name: \"subtaskName\", size: \"small\", value: subtaskName, variant: \"outlined\", placeholder: \"Subtask name\", onChange: e => setSubtaskName(e.target.value), onKeyPress: _onEnter(handleCreateSubtask) }),\r\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"Button\"], { disabled: subtaskName === \"\", variant: \"contained\", color: \"primary\", onClick: handleCreateSubtask }, \"Create\"))),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], { colSpan: 8 })));\r\n};\r\nconst SubtaskBody = ({ task }) => {\r\n    const classes = useStyles();\r\n    const { apiUrl, fetchPost, projectid, _onLocalhostFn, _onEnter, useConfirmDeleteItem } = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useContext\"])(_AppContext__WEBPACK_IMPORTED_MODULE_5__[\"AppContext\"]);\r\n    const [current, setCurrent] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(null);\r\n    const [target, setTarget] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(null);\r\n    const [subtaskName, setSubtaskName] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(\"\");\r\n    const [data, setData] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(null);\r\n    const [{ confirmState, item: subtaskOnDelete }, onDeleteSubtask] = useConfirmDeleteItem();\r\n    const passingProps = {\r\n        ...Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useContext\"])(_AppContext__WEBPACK_IMPORTED_MODULE_5__[\"AppContext\"]),\r\n        handleMoveSubtask,\r\n        onDeleteSubtask\r\n    };\r\n    const moveSubtask = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((dragIndex, hoverIndex) => {\r\n        if (data) {\r\n            const current = data.list[dragIndex];\r\n            const hover = data.list[hoverIndex];\r\n            setCurrent(current);\r\n            setTarget(hover);\r\n            const updateSubtaskList = immutability_helper__WEBPACK_IMPORTED_MODULE_3___default()(data.list, {\r\n                $splice: [\r\n                    [dragIndex, 1],\r\n                    [hoverIndex, 0, current]\r\n                ]\r\n            });\r\n            setData({ ...data, list: updateSubtaskList });\r\n        }\r\n    }, [data, target]);\r\n    async function handleMoveSubtask(current, target) {\r\n        const response = await fetchPost({\r\n            url: apiUrl(\"subtasksystem\"),\r\n            body: {\r\n                action: \"move\",\r\n                projectid,\r\n                taskid: task.taskid,\r\n                selectseq: current.sequence,\r\n                movetoseq: target.sequence\r\n            }\r\n        });\r\n        await handleLoadSubtask();\r\n    }\r\n    async function handleCreateSubtask() {\r\n        const response = await fetchPost({\r\n            url: apiUrl(\"subtasksystem\"),\r\n            body: {\r\n                action: \"create\",\r\n                projectid,\r\n                taskid: task.taskid,\r\n                subtaskname: subtaskName\r\n            }\r\n        });\r\n        console.log(response);\r\n        if (response.status === \"success\") {\r\n            setSubtaskName(\"\");\r\n        }\r\n        await handleLoadSubtask();\r\n    }\r\n    async function handleDeleteSubtask() {\r\n        if (subtaskOnDelete) {\r\n            const response = await fetchPost({\r\n                url: apiUrl(\"subtasksystem\"),\r\n                body: {\r\n                    action: \"delete\",\r\n                    projectid,\r\n                    taskid: task.taskid,\r\n                    subtaskid: subtaskOnDelete.subtaskid\r\n                }\r\n            });\r\n            if (response.status === \"success\") {\r\n                onDeleteSubtask({ action: \"cancel\" });\r\n            }\r\n            await handleLoadSubtask();\r\n        }\r\n    }\r\n    async function handleLoadSubtask() {\r\n        const response = await fetchPost({\r\n            url: apiUrl(\"loadtask\"),\r\n            body: {\r\n                action: \"detail\",\r\n                projectid,\r\n                taskid: task.taskid\r\n            }\r\n        });\r\n        console.log(response);\r\n        setData(response);\r\n    }\r\n    function handleFetchTemp() {\r\n        setData({\r\n            percent: 0,\r\n            list: [\r\n                {\r\n                    subtaskid: 889274205,\r\n                    sequence: 1,\r\n                    subtaskname: \"Subtask1\",\r\n                    startdate: null,\r\n                    enddate: null,\r\n                    note: null,\r\n                    createdate: \"2020-02-18T20:40:44.000Z\",\r\n                    status: \"inprogress\",\r\n                    cost: null\r\n                },\r\n                {\r\n                    subtaskid: 985781309,\r\n                    sequence: 2,\r\n                    subtaskname: \"Subtask2\",\r\n                    startdate: null,\r\n                    enddate: null,\r\n                    note: null,\r\n                    createdate: \"2020-02-18T20:48:58.000Z\",\r\n                    status: \"inprogress\",\r\n                    cost: null\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\r\n        _onLocalhostFn(handleFetchTemp, handleLoadSubtask);\r\n    }, []);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_AppContext__WEBPACK_IMPORTED_MODULE_5__[\"AppContext\"].Provider, { value: passingProps },\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null,\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CreateSubtaskRow, Object.assign({}, {\r\n                subtaskName,\r\n                setSubtaskName,\r\n                _onEnter,\r\n                handleCreateSubtask\r\n            })),\r\n            data && (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, data.list.map((d, i) => {\r\n                return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SubtaskRow__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { key: d.subtaskid, data: d, itemIndex: i, moveSubtask: moveSubtask, movingItem: {\r\n                        current: current,\r\n                        target: target\r\n                    }, task: task, handleLoadSubtask: handleLoadSubtask }));\r\n            }))),\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ConfirmDialog, { type: \"delete\", open: confirmState, onClose: () => onDeleteSubtask({ action: \"cancel\" }), onCancel: () => onDeleteSubtask({ action: \"cancel\" }), onSubmit: handleDeleteSubtask, title: \"Are you sure you want to delete ?\" },\r\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"Typography\"], { variant: \"h6\", style: { fontWeight: 400 }, align: \"center\" }, subtaskOnDelete && subtaskOnDelete.subtaskname)))));\r\n};\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SubtaskBody);\r\n\n\n//# sourceURL=webpack:///./src/component/Table/Subtask/SubtaskBody.tsx?");

/***/ }),

/***/ "./src/component/Table/Subtask/SubtaskRow.tsx":
/*!****************************************************!*\
  !*** ./src/component/Table/Subtask/SubtaskRow.tsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material-ui/core/styles */ \"./node_modules/@material-ui/core/esm/styles/index.js\");\n/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material-ui/core */ \"./node_modules/@material-ui/core/esm/index.js\");\n/* harmony import */ var react_dnd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dnd */ \"./node_modules/react-dnd/dist/esm/index.js\");\n/* harmony import */ var _AppContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../AppContext */ \"./src/AppContext.tsx\");\n/* harmony import */ var _material_ui_core_colors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material-ui/core/colors */ \"./node_modules/@material-ui/core/esm/colors/index.js\");\n/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material-ui/icons */ \"./node_modules/@material-ui/icons/esm/index.js\");\n/* harmony import */ var _ItemTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ItemTypes */ \"./src/component/Table/ItemTypes.ts\");\n/* harmony import */ var _material_ui_pickers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @material-ui/pickers */ \"./node_modules/@material-ui/pickers/esm/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__[\"makeStyles\"])(theme => ({ dateInput: { cursor: \"pointer\" } }));\r\nconst CellSubtaskName = ({ apiUrl, fetchPost, handleLoadSubtask, projectid, subtaskid, subtaskName, task }) => {\r\n    const [value, setValue] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(subtaskName);\r\n    async function onEditSubtaskName() {\r\n        const response = await fetchPost({\r\n            url: apiUrl(\"subtasksystem\"),\r\n            body: {\r\n                action: \"edit\",\r\n                projectid,\r\n                taskid: task.taskid,\r\n                subtaskid: subtaskid,\r\n                subtaskname: value\r\n            }\r\n        });\r\n        console.log(response);\r\n        await handleLoadSubtask();\r\n    }\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], null,\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { style: { display: \"flex\" } },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"InputBase\"], { fullWidth: true, multiline: true, rowsMax: \"6\", value: value, placeholder: \"Subtask name\", onChange: e => setValue(e.target.value) }),\r\n            value !== subtaskName && (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"Button\"], { style: { marginTop: \"auto\", marginLeft: 8 }, variant: \"contained\", color: \"primary\", size: \"small\", onClick: onEditSubtaskName }, \"Save\")))));\r\n};\r\nconst CellDate = ({ apiUrl, fetchPost, handleLoadSubtask, projectid, task, data, subtaskid, label, date, _dateToString, _dateToAPI, keys }) => {\r\n    const classes = useStyles();\r\n    async function onEditDate(date) {\r\n        console.log({\r\n            action: \"edit\",\r\n            projectid,\r\n            taskid: task.taskid,\r\n            subtaskid,\r\n            [keys]: _dateToAPI(date)\r\n        });\r\n        const response = await fetchPost({\r\n            url: apiUrl(\"tasksystem\"),\r\n            body: {\r\n                action: \"edit\",\r\n                projectid,\r\n                taskid: task.taskid,\r\n                subtaskid,\r\n                [keys]: _dateToAPI(date)\r\n            }\r\n        });\r\n        await handleLoadSubtask();\r\n    }\r\n    const detail = task;\r\n    function getMinDate() {\r\n        if (keys === \"startdate\") {\r\n            return detail.startdate\r\n                ? new Date(detail.startdate)\r\n                : new Date(detail.createdate);\r\n        }\r\n        else {\r\n            return data.startdate\r\n                ? new Date(data.startdate)\r\n                : detail.startdate\r\n                    ? new Date(detail.startdate)\r\n                    : new Date(detail.createdate);\r\n        }\r\n    }\r\n    function getMaxDate() {\r\n        if (detail.enddate) {\r\n            return { maxDate: new Date(detail.enddate) };\r\n        }\r\n        return {};\r\n    }\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], null,\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_pickers__WEBPACK_IMPORTED_MODULE_8__[\"DatePicker\"], Object.assign({ autoOk: true, fullWidth: true, variant: \"inline\", inputVariant: \"outlined\", label: label, value: date ? new Date(date) : new Date(), minDate: getMinDate() }, getMaxDate(), { onChange: (d) => onEditDate(new Date(d)), views: [\"year\", \"month\", \"date\"], labelFunc: () => {\r\n                return date ? _dateToString(new Date(date)) : \"Select date\";\r\n            } }))));\r\n};\r\nconst SubtaskRow = props => {\r\n    const classes = useStyles();\r\n    const theme = Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__[\"useTheme\"])();\r\n    const { itemIndex, data, moveSubtask, movingItem, handleLoadSubtask, task } = props;\r\n    const { apiUrl, fetchPost, onDeleteSubtask, handleMoveSubtask, _dateToString, _dateToAPI, _getDifferenceDate, projectid, project } = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useContext\"])(_AppContext__WEBPACK_IMPORTED_MODULE_4__[\"AppContext\"]);\r\n    const propsToCell = {\r\n        handleLoadSubtask,\r\n        apiUrl,\r\n        fetchPost,\r\n        projectid,\r\n        project,\r\n        task,\r\n        data,\r\n        subtaskid: data.subtaskid\r\n    };\r\n    const [isHover, setIsHover] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false);\r\n    const [{ isOver, isOverCurrent }, drop] = Object(react_dnd__WEBPACK_IMPORTED_MODULE_3__[\"useDrop\"])({\r\n        accept: _ItemTypes__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ROW,\r\n        hover(item, monitor) {\r\n            const hoverIndex = itemIndex;\r\n            const dragIndex = item.index;\r\n            if (!drag) {\r\n                return;\r\n            }\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            moveSubtask(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            isOverCurrent: monitor.isOver({ shallow: true })\r\n        })\r\n    });\r\n    const [, drag] = Object(react_dnd__WEBPACK_IMPORTED_MODULE_3__[\"useDrag\"])({\r\n        item: { type: _ItemTypes__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ROW, index: itemIndex }\r\n    });\r\n    const onDragEnd = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(() => {\r\n        handleMoveSubtask(movingItem.current, movingItem.target);\r\n    }, [movingItem]);\r\n    let backgroundColor = theme.palette.background.paper;\r\n    if (isOverCurrent || isOver) {\r\n        backgroundColor = theme.palette.action.hover;\r\n    }\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableRow\"], { ref: drop, onDragEnd: onDragEnd, style: { backgroundColor, transition: \".2s\" }, onMouseEnter: () => setIsHover(true), onMouseLeave: () => setIsHover(false) },\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], { padding: \"checkbox\", colSpan: 2 }, isHover ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { ref: drag },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_icons__WEBPACK_IMPORTED_MODULE_6__[\"DragIndicator\"], { fontSize: \"small\", style: { cursor: \"move\", color: _material_ui_core_colors__WEBPACK_IMPORTED_MODULE_5__[\"grey\"][400] } }))) : (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { style: { width: 24, height: 24 } }))),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CellSubtaskName, Object.assign({}, propsToCell, { subtaskName: data.subtaskname })),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CellDate, Object.assign({}, propsToCell, { date: data.startdate, label: \"Start\", keys: \"startdate\", _dateToString: _dateToString, _dateToAPI: _dateToAPI })),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CellDate, Object.assign({}, propsToCell, { date: data.enddate, label: \"End\", keys: \"enddate\", _dateToString: _dateToString, _dateToAPI: _dateToAPI })),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], { align: \"center\", colSpan: 4 }, (function () {\r\n            const diff = _getDifferenceDate(data.startdate, data.enddate);\r\n            const suffix = data.startdate && data.enddate ? ` day${diff > 1 ? \"s\" : \"\"}` : \"\";\r\n            return diff + suffix;\r\n        })()),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], { align: \"center\" }, data.note),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"TableCell\"], { padding: \"checkbox\" }, isHover ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"IconButton\"], { onClick: () => onDeleteSubtask({ action: \"delete\", item: data }) },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_icons__WEBPACK_IMPORTED_MODULE_6__[\"Delete\"], null))) : (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { style: { width: 24, height: 24, padding: 12 } })))));\r\n};\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SubtaskRow);\r\n\n\n//# sourceURL=webpack:///./src/component/Table/Subtask/SubtaskRow.tsx?");

/***/ })

}]);